<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>redis-demo</artifactId>
<!--	<version>0.0.1-SNAPSHOT</version>-->
	<version>0.0.1-SNAPSHOT</version>
	<name>redis-demo</name>
	<description>springboot and redis</description>
	<properties>
		<java.version>1.8</java.version>
<!--		<docker-repo>829898772826.dkr.ecr.us-west-1.amazonaws.com/student-service</docker-repo>-->
		<docker-repo>atlroc99/student-redis-service</docker-repo>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- CodeHaus mojo Plugin generate build number -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
<!--					<urlScm>https://github.com/atlroc99/springboot-redis.git</urlScm>-->
					<urlScm>scm:git:https://github.com/atlroc99/springboot-redis.git</urlScm>
					<timestampFormat>yyyy-MM-dd HH:mm:ss.S</timestampFormat>
					<timestampPropertyName>myBuildNumberVariable</timestampPropertyName>
					<doCheck>true</doCheck>
					<doUpdate>true</doUpdate>
				</configuration>
			</plugin>
				<!--	execute shell		-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<phase>clean</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>/bin/bash</executable>
							<executable>${basedir}/scripts/script.sh</executable>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Spotify Docker Plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.13</version>
				<executions>
					<execution>
						<id>default</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
							<!-- <goal>push</goal>-->
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- <repository>${project.artifactId}</repository>-->
					<repository>${docker-repo}</repository>
<!--					<tag>${project.build}</tag>-->
					<tag>latest</tag>
					<!--<buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>-->
				</configuration>
			</plugin>
			<!-- Antrun Plugin to Echo -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo>**** Displaying value from pom.xml file **** </echo>
								<echo>Base Dir: ${basedir}</echo>
								<echo>project version>: ${project.version}</echo>
								<echo>artifactID: ${project.artifactId}</echo>
								<echo>build number: ${buildNumber}</echo>
								<echo>**** FINISH ****</echo>
							</target>
						</configuration>

					</execution>

				</executions>
			</plugin>
		</plugins>
	</build>

</project>
